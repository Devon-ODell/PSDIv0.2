version: '3.8'

services:
  db:
    image: postgres:15-alpine # Use a specific version
    container_name: psdi_postgres_db # Optional: specific container name
    # Environment variables loaded from the .env file in this directory
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persist database data
    # Expose port only if you need direct access from your host machine (for debugging)
    # ports:
    #   - "5432:5432"
    networks:
      - psdi_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped # Optional: restart policy

  app:
    container_name: psdi_server # Optional: specific container name
    # Build directive:
    build:
      context: .. # Context is the parent directory (project root) relative to this compose file
      dockerfile: Dockerfile # Path to Dockerfile relative to the context (project root)
    ports:
      # Map host port 8080 to container port 8080 (defined in Dockerfile/app)
      - "${SERVER_PORT}:${SERVER_PORT}"
    depends_on:
      db: # Ensures db is healthy before starting app
        condition: service_healthy
    # Environment variables passed to the Go application container
    # Loaded from the .env file + specific settings
    environment:
      SERVER_PORT: ${SERVER_PORT}
      GIN_MODE: ${GIN_MODE}
      # Database connection URL using service name 'db' as host
      DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable"
      # Paycor variables
      PAYCOR_CLIENT_ID: ${PAYCOR_CLIENT_ID}
      PAYCOR_CLIENT_SECRET: ${PAYCOR_CLIENT_SECRET}
      PAYCOR_API_URL: ${PAYCOR_API_URL}
      # Add any other env vars needed by the app
    networks:
      - psdi_network
    restart: unless-stopped # Optional: restart policy

volumes:
  postgres_data: # Defines the named volume used by the db service

networks:
  psdi_network: # Defines the network bridge for services to communicate
    driver: bridge